# .travis.yml for use with EPICS Base ci-scripts
# (see: https://github.com/epics-base/ci-scripts)

# This is YAML - indentation levels are crucial

language: cpp
compiler: gcc
dist: bionic

cache:
  directories:
  - $HOME/.cache

env:
  global:
    - SETUP_PATH=.ci-local:.ci
    - VV=1
    - _PVXS_ABORT_ON_CRIT=1
    - PVXS_LOG=*=WARN

install:
  - sudo pip install git+https://github.com/mdavidsaver/ci-core-dumper#egg=ci-core-dumper
  - ./.ci/travis/prepare.sh
  - ./.ci-local/travis-libevent.sh

before_script:
  - sudo ci-core-dumper install

script:
  - ulimit -c unlimited
  - ./.ci/travis/build.sh
  - ./.ci-local/cdt-check.sh

after_failure:
  - ci-core-dumper report

# If you need to do more during install and build,
# add a local directory to your module and do e.g.
#  - ./.ci-local/travis/install-extras.sh

# Define build jobs

# Well-known variables to use
# SET      source setup file
# EXTRA    content will be added to make command line
# STATIC   set to YES for static build (default: NO)
# TEST     set to NO to skip running the tests (default: YES)
# VV       set to make build scripts verbose (default: unset)

# Usually from setup files, but may be specified or overridden
#  on a job line
# MODULES  list of dependency modules
# BASE     branch or release tag name of the EPICS Base to use
# <MODULE> branch or release tag for a specific module
# ...      see README for setup file syntax description

jobs:
  include:

# Different configurations of default gcc and clang

  - env: BASE=7.0 LIBEVENT_TAG=release-2.1.11-stable
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - gdb
        - cmake

  - env: BASE=3.15
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - gdb
        - cmake

  - env: BASE=3.14
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - gdb
        - cmake

  - env: BASE=7.0
    compiler: clang
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - gdb
        - cmake
        - clang

# Cross-compilations to Windows using MinGW and WINE
    
  - env: BASE=7.0 WINE=64 TEST=NO STATIC=YES
    compiler: mingw
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - gdb
        - cmake
        - g++-mingw-w64-x86-64

  - env: BASE=7.0 WINE=64 TEST=NO STATIC=NO
    compiler: mingw
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - gdb
        - cmake
        - g++-mingw-w64-x86-64

# Other gcc versions (added as an extra package)

  - env: BASE=7.0 LIBEVENT_TAG=origin/patches-2.0
    dist: trusty
    compiler: gcc-4.8
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - gdb
        - cmake
        - clang
        - g++-4.8

  - env: BASE=7.0
    dist: trusty
    compiler: gcc-4.9
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - gdb
        - cmake
        - clang
        - g++-4.9

  - env: BASE=7.0
    compiler: gcc-6
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - gdb
        - cmake
        - clang
        - g++-6

  - env: BASE=7.0
    compiler: gcc-7
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - gdb
        - cmake
        - clang
        - g++-7

  - env: BASE=7.0
    compiler: gcc-8
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - gdb
        - cmake
        - clang
        - g++-8

# MacOS build

  - env: BASE=7.0
    os: osx
    compiler: clang
    addons: { homebrew: { packages: ["re2c"], update: true } }
